Kafka:

    Principal objetivo do datalake:
        - Trata grandes conjuntos de dados estruturados ou nao em batch ou streaming

    Camada de mensagens:
        - Capacidade de dissociar a origem (produtor) e o destino (consumidor)
        - Capacidade de manipular mensagens de alta velocidade na ordem de centenas MBytes por segundo a cada nó do servidor de app
        - Capacidade de lidar com graandes volumes de dados da ordem de terabytes
        - Capacidade de lidar com mensagens com latênica muito baixa sob requisitos extremos de taxa de transferencia
        - Capacidade de garantir a entrega de mensagens (durabilidade) de forma ordenada
        - Capacidade de fornecer a mesma mensagem a vários consumidores
        - Capacidade de análise de dados para derivar estatisticas operacionais
        - Capacidade de agregar dados provenientes de várias fontes e fazer algumas análises
        - Capacidade de alto desempenho com menos requisitos de hardware
        - Capacidade de executar recursos míminos de enriquecimentos e transformação


Oque é? :

        - Foi desenvolvido no linkedin
        - É uma plataforma opensource de processamento de streaming de dados, escrita em Scala e Java. O projeyo tem como objetivo fornecer uma plataforma
        - unificada de alta produtividade de baixa latëncia pra o tratamento de feeds dedados em tempo real.
        - Sua camada de armazenamento é essencialmente uma dila de mensagens massivamente esclável arquitetada como um log de transações distribuidas, tornando altamente valioso para infra corporativas de processamento e straming de dados.
        - É um MOM - Midleware Orientado a Mensagens, que suporta o envio e recebimento de mensagens entre sistemas distribuídos. 
        - Conecta sua fonte de dados com seu destino. E nao precisa necessariamente trabalhar só com streaming.

Arquitetura:
    Producers:
         - os que vao publicar um serviço
         - precisa ter previlégio para enviar dados para o topics
    Consumers:
         - os que vao receber dados
         - precisam ter uma especie de "assinatura" um subscrição nos tópicos
    Topics:
         - um conjunto/grupo de mensagens do mesmo tipo
         - uma categoria de mensagens
         - abstração central do kafka
         - entidade lógica, fisicamente representada por um arquivo de log  
         o que tenho dentro do tópico
            -uma sequencia de mensagens, onde o tópiccco ordena as mensagens enviadas pelo producer
            eventing sourcing nome da arquitetura em que ordena as mudanças como um sequncia de eventos imutavies ordenados pelo tempo

            mensagens (apache kafka message):
                - cada mensagem contem;
                    - um timestamp
                    - um ID, um identificador unico
                    - dados--> chamados de payloads
            offset (controla as mensagens que ja foram lidas):
                - placeholder; um espaço reservado
                - guarda a posição da ultima mensagem lida
                - mantido pelo Kafka Cosumer
                - corresponde ao identiicador da mensagem

            politica de rentenção:
                - retem todas mensagens publicadas independentemente do consumo
                - período de retenção é configurável e padrão é de 168 horas (7 dias).
                - período de retenção é definido por tópico
                - considerar restrições de respaço em disco ao definir a política de retenção  

    Broker:
         - Controla os topics 


Apache Kafka Cluster:

    É possível construir um cluster kafka caso trablhe com muitissimos dados; petabytes no caso
    Ele basicamente distribui o broker em várias máquinas, ou até mesmo 2 ou mais em uma mesma máquina
    O número do broker define o tamanho do cluster, nao necessariamente a qtd de máquinas.
    Apache ZOOKEEPER: é quem gerencia um cluster kafka
    Resumidamente: é um conjunto de brokers que podem rodar ou nao na mesma máquina gerenciados pelo zookeeper

    Apache ZooKeeper:
        -Sistemas distribuidos; coleçao de recursos que possuem um objetivo ou funçao especifico, consistem de multiplos nodes ou workes e
        requer coordenaçao para garantir consistencia e progresso par ao objetivo comum, cada node se comunica com os outros nodes através
        de mensagens.

        - Serviço centralizado para manter metadados sobre o cluster de nodes distribuidos, ou seja, gerencias um sistema distribuido
        - É um sistema distribuído por sí próprio constituindo multiplos nodes

    